access_log /var/www/blot/logs/nginx.log test;

# allow uploads of files up to 100mb, this needs
# to be enough to handle big git pushes and avatars
client_max_body_size 100M;

root /;

# The caching folders include the protocol in the path, so that redirects
# from HTTP to HTTP can be handled at the Node.js application. I figure
# this isn't important here so we have no protocol in the folder structure
# use $request_uri if you want the query string also
# use $uri if you don't want the query string
set $permanent_cache /cache/$host/$scheme/permanent$request_uri;
set $temporary_cache /cache/$host/$scheme/temporary$request_uri;
set $temporary_cache_index /cache/$host/$scheme/temporary$request_uri/index.html;

set $static_directory /var/www/blot/static;
set $blog_directory /var/www/blot/blogs;

# This is used to determine whether the server is handling
# requests, don't remove it unless you change monit.rc too!
location = /health {
    return 200;
}

# Stripe also sets a cookie so you
# can't just check if a cookie exists
# You have to check for the type of cookie
# set by Express which handles Blot's
# dashboard sessions.
if ($cookie_connect.sid) {
  set $permanent_cache false;
  set $temporary_cache false;
  set $temporary_cache_index false;
}

location ~ /cdn(.*)$ {
  add_header 'Cache-Hit' 'true-permanent-cdn' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $static_directory$1 @temporary-cdn;
}

location @temporary-cdn {
  add_header 'Cache-Hit' 'true-cdn' always;
  add_header 'Cache-Control' 'no-cache' always;
  open_file_cache off;
  try_files $blog_directory$1 @blot;
}

location / {
  add_header 'Cache-Hit' 'true-permanent' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $permanent_cache @temporary;
}

location @temporary {
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Cache-Hit' 'true' always;
  open_file_cache off;
  try_files $temporary_cache $temporary_cache_index @blot;
}

location @blot {
  add_header 'Cache-Hit' 'false' always;
  include /var/www/blot/config/nginx/reverse-proxy.conf;
}