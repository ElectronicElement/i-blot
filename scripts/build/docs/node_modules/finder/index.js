var mustache = require('mustache');
var input = "Apps\nBooks\nDev's blog\n  Test.md\n  Foo.txt";
var fs = require('fs-extra');
var cheerio = require('cheerio');
var template = fs.readFileSync(__dirname + '/window.mustache', 'utf8');
var texteditor_template = fs.readFileSync(__dirname + '/texteditor.mustache', 'utf8');
var wrapper = fs.readFileSync(__dirname + '/wrapper.mustache', 'utf8');

function main (input) {

  input = input.trim();

  var files = input.split('\n');

  for (var i = 0;i < files.length;i++) {

    var file = {};

    file.name = files[i].trim();
    file.nested = files[i][0] !== files[i].trim()[0];
    file.open = false;

    // Indicate the parent folder for this file
    // we use this info to rotate the arrow next to the
    // folder icon in the finder.
    if (file.nested && !files[i - 1].nested)
      files[i - 1].open = 'open';

    file.file = file.name.indexOf('.') > -1;
    file.folder = !file.file;

    if (file.file)
      file.extension = file.name.slice(file.name.indexOf('.') + 1);

    if (file.open)
      file.open = 'open';
    else 
      file.open = '';

    if (file.nested)
      file.nested = 'nested';
    else 
      file.nested = '';

    if (file.folder)
      file.folder = 'folder';
    else 
      file.folder = '';

    if (file.file)
      file.file = 'file';
    else 
      file.file = '';


    files[i] = file;
  }

  var output = mustache.render(template, {contents: files, title: 'Your site'});


  return output;
}

if (require.main !== module) {

  var output = mustache.render(wrapper, {output: main(input)});

  console.log('Built file');
  fs.writeFileSync('output.html', output);
}

function texteditor(text) {
  return mustache.render(texteditor_template, {text: text, title: 'Your post.txt'});
}

function exports (html, callback) {

  var $ = cheerio.load(html);

  $('pre.folder').each(function(i, el){

    var html = main($(el).find('code').first().html());

    $(el).replaceWith(html);
  }); 

  $('pre.file').each(function(i, el){

    var html = texteditor($(el).find('code').first().html());

    $(el).replaceWith(html);
  }); 

  callback(null, $.html());
};

exports('<pre class="folder"><code>Hey</code></pre>', function(err, html){

  if (err) throw err;

});

module.exports = exports;