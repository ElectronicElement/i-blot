var fs = require('fs-extra');
var join = require('path').join;
var CACHE_DIRECTORY = require('helper').rootDir + '/www/';

module.exports = function (req, res, next) {

  // Never cache requests with sessions of any sort
  // This is to prevent user data leaking into the cache
  if (req.session && req.session.uid) return next();

  var send = res.send;

  // We are overwriting the send function to 
  // intercept the response after it is sent
  // Is there a better way to do this?
  res.send = function (string) {

    // Send the response straight away
    send.call(this, string);
    
    // Never cache requests which produce errors
    if (res.statusCode !== 200) return;

    // We must use baseUrl because some of the middleware
    // is mounted in such a way that req.path doesn't
    // return the full path of the request
    var request_path = req.baseUrl + req.path;
    var file_path = join(CACHE_DIRECTORY, req.hostname, request_path);
    
    // These are two heuristics used to determine if the
    // response was HTML served with a clean URL, e.g.
    // /about instead of /about/index.html. In future, I should
    // work out how to determine the contenttype of the res.
    var no_file_extension = request_path.indexOf('.') === -1;
    var trailing_slash = request_path.slice(-1) === '/';
    
    // Determine if we should create a directory containing
    // an index.html file for this request. For example,
    // a request to /about will produce a /about/index.html
    if (no_file_extension || trailing_slash) {
      file_path = join(file_path, 'index.html');
    }

    // Save the result of the request to a static file
    fs.outputFile(file_path, string, function(err){

      if (err) console.log(err);

      // Do nothing if there's an error. We don't care.
      // Or do we?
    });
  };

  next();  
};
